name: Pipeline For AWS Infrastructure
on:
  workflow_dispatch:
    inputs:
        environment:
          type: 'choice'
          description: 'Specify the target environment'
          required: true
          options:
              - 'QA'
              - 'Stage'
              - 'Prod'
          default: 'Stage'
        region:
          type: 'string'
          description: 'Enter the AWS region'
          required: true
        apply:
          type: 'boolean'
          description: 'Apply the Kubernetes manifests'
          required: true
          default: false
  

jobs:    
  setup:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.Environment }}
    steps:
    - 
        name: Checkout
        uses: actions/checkout@v3
    - 
        name: Install Terraform
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -fsSL https://releases.hashicorp.com/terraform/0.15.0/terraform_0.15.0_linux_amd64.zip -o terraform.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version
    - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}
    -
        name: Deploy Infrastructure
        run: |
          cd iac/terraform
          terraform init
          terraform plan
    
  apply:
    needs: ["setup"]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.Environment }}
    if: github.event.inputs.apply == 'true'
    steps:
    - 
        name: Checkout
        uses: actions/checkout@v3
    -   
        name: Install AWS CLI and kubectl
        run: |
            sudo apt-get update
            sudo apt-get install -y awscli
            sudo apt-get install -y kubectl
    - 
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ github.event.inputs.region }}
    -
        name: Apply kubernetes files
        run: |
          aws --version
          # aws eks update-kubeconfig --region eu-north-1 --name eks-cluster